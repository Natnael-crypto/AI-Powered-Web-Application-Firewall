name: Deploy Secure Go Web Application with Static and Dynamic Analysis

on:
  pull_request:
  push:
    branches:
      - ssl_termination  # Trigger workflow on push to the secure branch

jobs:
  static-analysis:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 1.5: Print current working directory
      - name: Print working directory and Git info
        run: |
          echo "Current working directory: $(pwd)"
          ls -la  # List files in the current directory
          echo "Git branch:"
          git branch  # Show current Git branch
          echo "Git log:"
          git log

      # Step 2: Set up Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23.2

      # Step 3: Restore Go modules cache
      - name: Restore Go modules cache
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('Interceptor/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Step 4: Install Go dependencies (only inside Interceptor)
      - name: Install Go dependencies
        working-directory: ./Interceptor
        run: |
          go mod tidy
          go mod download

      # Step 5: Install gosec for static analysis
      - name: Install gosec
        run: |
          curl -sSfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s -- -b $(go env GOPATH)/bin

      # Step 6: Run gosec (Static Analysis) from the root directory
      - name: Run gosec (Static Analysis)
        working-directory: ./Interceptor
        run: |
          pwd
          gosec ./...
        continue-on-error: true

      # Step 7: Save gosec report
      - name: Save gosec report
        run: |
          gosec -fmt=text -out=gosec-report.txt ./...
        continue-on-error: true

      # Step 8: Upload gosec report
      - name: Upload gosec report
        uses: actions/upload-artifact@v3
        with:
          name: gosec-report
          path: gosec-report.txt
